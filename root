{"version":1,"ops":[{"type":1,"author":{"id":"7dc3389815eef5c39748b0f36c34c138aa3fea30"},"timestamp":1510593111,"metadata":{"github-id":"MDU6SXNzdWUyNzM1MDc3MDI=","github-url":"https://github.com/lstein/Perl-GD/issues/25","origin":"github"},"title":"Forking vs read_color_table()","message":"Consider the following:\n\n```perl\nuse GD::Simple;\n\nfor (1..100)\n{\n    my $pid = fork;\n\n    if(!defined($pid))\n    {\n        next;\n    }\n\n    if($pid == 0)\n    {\n        GD::Simple-\u003enew-\u003ebgcolor('transparent');\n        exit;\n    }\n}\n```\n\nThis fails more often than not, producing the following output:\n\n```\nunknown color at /usr/local/lib/perl5/site_perl/mach/5.26/GD/Simple.pm line 856, \u003cDATA\u003e line 52.\nunknown color at /usr/local/lib/perl5/site_perl/mach/5.26/GD/Simple.pm line 856.\nunknown color at /usr/local/lib/perl5/site_perl/mach/5.26/GD/Simple.pm line 856, \u003cDATA\u003e line 55.\nunknown color at /usr/local/lib/perl5/site_perl/mach/5.26/GD/Simple.pm line 856.\n[...]\n```\nWith some debugging put in, it becomes reasonably clear that `DATA`'s position is literally all over the place, reading completely random stuff from completely random places in Simple.pm. The gist of this obviously comes down to `DATA` being a typeglob and all that, in a concurrent scenario like the above, several processes read from it, some will be missing some data, eventually one of them will also make it skip past `__END__`, and after a short while everything goes bonkers.\n\nI've been playing with a couple of naive ideas for a fix, but the only real solution seems to be _not_ building `%COLORS` at run-time.\n\nAny other suggestions or observations perhaps before I put in a pull request with a static table?","files":null}]}